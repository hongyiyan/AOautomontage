function [ ] = setActiveLayer( name, frombeginning)
% FUNCTION []=setActiveLayer( layername )
% Requires: Photoshop CS5 Extended, and an active connection to a running
% version of photoshop. Photoshop must be running before MATLAB starts!
%
% This function connects to a running copy of Photoshop CS5.1, and sets the
% input name as the active layer.
%
%
%     Copyright (C) 2014  Robert F Cooper
% 
%     This program is free software: you can redistribute it and/or modify
%     it under the terms of the GNU General Public License as published by
%     the Free Software Foundation, either version 3 of the License, or
%     (at your option) any later version.
% 
%     This program is distributed in the hope that it will be useful,
%     but WITHOUT ANY WARRANTY; without even the implied warranty of
%     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%     GNU General Public License for more details.
% 
%     You should have received a copy of the GNU General Public License
%     along with this program.  If not, see <http://www.gnu.org/licenses/>.
%
% This code was presented by Michael L Hale, on Jul 15, 2010
% Accessed 9/10/2014, https://forums.adobe.com/thread/681042
% Modified slightly by Robert Cooper on 9/10/2014, for readability and utility
% in the Photoshop/MATLAB ROI extraction script

%     /*//////////////////////////////////////////////////////////////////////////////  
%     // Function: getActiveLayerIndex  
%     // Description: Gets gets the Action Manager API index  
%     //                        of activeLayer corrected for Background Layer  
%     // Usage: var idx = getActiveLayerIndex();  
%     // Input: None  
%     // Return: Number - correct AM itemIndex  
%     // Dependices: hasBackground  
%     //////////////////////////////////////////////////////////////////////////////*/  
%     /*//////////////////////////////////////////////////////////////////////////////  
%     // Function: isValidActiveLayer( )  
%     // Description: Checks LayerSection for 'real' layers  
%     // Usage: if( isValidActiveLayer() )  
%     // Input: None  
%     // Return: Boolean - True if not the end of a Set  
%     // Notes:  Needed only if the layer was made active  
%     //               using Action Manager API  
%     //////////////////////////////////////////////////////////////////////////////*/  
if ~exist('frombeginning','var')
    frombeginning=1;
end

    script = [ 
'    var re = "' name '";'...
'    var matches = collectNamesAM(re);  '...
'    for( var l = 0; l < matches.length; l++ ){  '...
'        makeActiveByIndex( matches[0], false );  '...
'    }'...
''...      
'    function collectNamesAM(re){  '...
'       var allLayers = new Array();  '...
'       var startLoop = getNumberOfLayer();  '...
'       if( ' num2str(frombeginning) '== 0 ){'...
'            startLoop = getActiveLayerIndex()-1;'...
'       }'...
'       var endLoop = Number( hasBackground() );   '...
'       for( var l = startLoop;l >= Number( hasBackground() ); l--){  '...
'            while( !isValidActiveLayer( l ) ) {  '...
'                l--;  '...
'            }  '...
'            if( getLayerNameByIndex( l ).match(re) != null){ '... 
'                allLayers.push( l );  '...
'            }  '...
'        }  '...
'         return allLayers;  '...
'    };'...
'    function getActiveLayerIndex() {  '...
'         var ref = new ActionReference();  '...
'         ref.putProperty( 1349677170 , 1232366921 );  '...
'         ref.putEnumerated( 1283027488, 1332896878, 1416783732 );  '...
'         var res = executeActionGet(ref).getInteger( 1232366921 ) - Number( hasBackground() );  '...
'         res == 4 ? res++:res;  '...
'         return res;     '...
'    }'...
''...
'    function isValidActiveLayer( idx ) {  '...
'         var propName = stringIDToTypeID( "layerSection" ); '... 
'         var ref = new ActionReference();   '...
'         ref.putProperty( 1349677170 , propName);'...
'         '... 
'         ref.putIndex( 1283027488, idx );  '...
'         var desc =  executeActionGet( ref );  '...
'         var type = desc.getEnumerationValue( propName );  '...
'         var res = typeIDToStringID( type );   '...
'         return res == "layerSectionEnd" ? false:true;  '...
'    };'...
''...
'   function hasBackground() {'...
'       var ref = new ActionReference();'...
'       ref.putProperty( charIDToTypeID("Prpr"), charIDToTypeID( "Bckg" ));'...
'       ref.putEnumerated(charIDToTypeID( "Lyr " ),charIDToTypeID( "Ordn" ),charIDToTypeID( "Back" ));'...
'       var desc =  executeActionGet(ref);'...
'       var res = desc.getBoolean(charIDToTypeID( "Bckg" ));'...
'       return res; '...
'    };'...
''...
'    function makeActiveByIndex( idx, forceVisible ){  '...
'         try{  '...
'              var desc = new ActionDescriptor();  '...
'              var ref = new ActionReference();  '...
'              ref.putIndex(charIDToTypeID( "Lyr " ), idx);  '...
'              desc.putReference( charIDToTypeID( "null" ), ref );  '...
'              desc.putBoolean( charIDToTypeID( "MkVs" ), forceVisible );  '...
'              executeAction( charIDToTypeID( "slct" ), desc, DialogModes.NO );  '...
'         }catch(e){ return -1; }  '...
'    };'...
''...
'    function getNumberOfLayer(){   '...
'    var ref = new ActionReference();   '...
'    ref.putEnumerated( charIDToTypeID("Dcmn"), charIDToTypeID("Ordn"), charIDToTypeID("Trgt") );   '...
'    var desc = executeActionGet(ref);   '...
'    var numberOfLayer = desc.getInteger(charIDToTypeID("NmbL"));   '...
'    return numberOfLayer;   '...
'    }; '...
''...
'    function getLayerNameByIndex( idx ) {   '...
'        var ref = new ActionReference();   '...
'        ref.putProperty( charIDToTypeID("Prpr") , charIDToTypeID( "Nm  " ));   '...
'        ref.putIndex( charIDToTypeID( "Lyr " ), idx );  '...
'        return executeActionGet(ref).getString(charIDToTypeID( "Nm  " ));   '...
'    }; ' ];

psjavascript(script);

end

